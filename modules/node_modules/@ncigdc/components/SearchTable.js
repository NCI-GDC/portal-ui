/* @flow */

import React from 'react';
import { connect } from 'react-redux';
import { compose } from 'recompose';
import Pagination from '@ncigdc/components/Pagination';
import Showing from '@ncigdc/components/Pagination/Showing';
import { Row } from '@ncigdc/uikit/Flex';
import TableActions from '@ncigdc/components/TableActions';
import tableModels from '@ncigdc/tableModels';

import Table, { Tr, Th } from '@ncigdc/uikit/Table';

export const SearchTable = compose(
  connect((state, props) => ({ tableColumns: state.tableColumns[props.entityType] }))
)(({ downloadable, hits, relay, entityType, tableHeader, tableColumns }) => {
  const tableInfo = tableModels[entityType].table
    .slice()
    .sort((a, b) => tableColumns.indexOf(a.id) - tableColumns.indexOf(b.id))
    .filter(x => tableColumns.includes(x.id));

  return (
    <div>
      <Row style={{ backgroundColor: 'white', padding: '1rem', justifyContent: 'space-between' }}>
        { tableHeader &&
          <h3 className='panel-title'>
            {tableHeader}
          </h3>
        }
        <Showing
          docType={entityType}
          prefix={entityType}
          params={relay.route.params}
          total={hits.total}
        />
        <TableActions
          prefix={entityType}
          entityType={entityType}
          total={hits.total}
          sortKey={`${entityType}_sort`}
          endpoint={entityType}
          downloadable={downloadable}
          downloadFields={tableModels[entityType].table.filter(x => x.downloadable).map(x => x.id)}
          sortOptions={tableModels[entityType].table.filter(x => x.sortable)}
        />
      </Row>
      <div style={{ overflowX: 'auto' }}>
        <Table
          headings={tableInfo.map(x => x.th || <Th key={x.id}>{x.name}</Th>)}
          body={
            <tbody>
              {hits.edges.map((e, i) => (
                <Tr key={e.node.id} index={i}>
                  {tableInfo.map(x => x.td(e.node))}
                </Tr>
              ))}
            </tbody>
          }
        />
      </div>
      <Pagination prefix={entityType} params={relay.route.params} total={hits.total} />
    </div>
  );
});

export default SearchTable;
