// @flow

import React from 'react';
import downloadSvg from 'download-svg';

import saveFile from '@ncigdc/utils/filesaver';
import toTsvString, { mapArrayToTsvString } from '@ncigdc/utils/toTsvString';
import DropDownButton from '@ncigdc/components/DropDownButton';

import Download from '@ncigdc/theme/icons/Download';
import Hidden from '@ncigdc/components/Hidden';

function getSelector(el) {
  return typeof el === 'string' ? document.querySelector(el) : el;
}

const DownloadVisualizationButton = ({
  svg,
  data,
  slug = 'export',
  stylePrefix,
  style,
  noText,
  tsvData,
  ...props
}) => (
  <DropDownButton
    icon={!noText && <Download />}
    label={noText ? <span><Download /><Hidden>Download</Hidden></span> : 'Download'}
    style={style}
    options={[
      ...(svg ? [
        {
          text: 'SVG',
          onClick: () => {
            downloadSvg({
              svg: getSelector(svg),
              stylePrefix,
              fileName: `${slug}.svg`,
            });
          },
        },
        {
          text: 'PNG',
          onClick: () => {
            downloadSvg({
              svg: getSelector(svg),
              stylePrefix,
              fileName: `${slug}.png`,
              scale: 2,
              useCanvg: true,
            });
          },
        },
      ] : []),
      ...(data ? [
        {
          text: 'JSON',
          onClick: () => {
            saveFile(
              JSON.stringify(data, null, 2),
              'JSON',
              `${slug}.json`
            );
          },
        },
      ] : []),
      ...(tsvData ? [
        {
          text: 'TSV',
          onClick: () => {
            saveFile(
              tsvData.forEach ? mapArrayToTsvString(tsvData) : toTsvString(tsvData),
              'TSV',
              `${slug}.tsv`
            );
          },
        },
      ] : []),
    ]}
    {...props}
  />
);


export default DownloadVisualizationButton;
