// @flow
/* global GDC_AUTH */

import React from 'react';
import { connect } from 'react-redux';
import DownCaretIcon from 'react-icons/lib/fa/caret-down';
import { Row } from '@ncigdc/uikit/Flex';
import Dropdown from '@ncigdc/uikit/Dropdown';
import styled from '@ncigdc/theme/styled';
import DownloadIcon from '@ncigdc/theme/icons/Download';
import { fetchToken } from '@ncigdc/dux/auth';

const NavLink = styled.a({
  padding: '15px 13px',
  display: 'inline-block',
  ':hover': {
    backgroundColor: '#dedddd',
  },
});

const logout = () => {
  if (window.location.port) {
    window.location.assign(`${GDC_AUTH}logout?next=:${window.location.port}${window.location.pathname}`);
  } else {
    window.location.assign(`${GDC_AUTH}logout?next=${window.location.pathname}`);
  }
};

const UserDropdown = connect(
  state => ({
    token: state.auth.token,
    user: state.auth.user,
  })
)(({
 user,
 dispatch,
}) => (
  <Row style={{ alignSelf: 'stretch' }}>
    <Dropdown
      button={
        <NavLink>
          <span>{user ? user.username : 'CURRENT_USER'}</span>
          <DownCaretIcon style={{ marginLeft: 'auto' }} />
        </NavLink>
      }
    >
      <Row onClick={() => dispatch(fetchToken())}>
        <DownloadIcon style={{ marginRight: '0.5rem', fontSize: '1.65rem' }} />
        Download Token
      </Row>
      <Row
        className="dropdown-item"
        onClick={logout}
      >
        <i className="fa fa-sign-out" style={{ marginRight: '0.5rem' }} aria-hidden="true" />
        Logout
      </Row>
    </Dropdown>
  </Row>
));

export default UserDropdown;
