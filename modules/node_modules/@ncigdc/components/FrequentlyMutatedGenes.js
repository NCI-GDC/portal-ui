// @flow

import React from 'react';
import withSize from 'react-sizeme';
import { compose } from 'recompose';

import { Row, Column } from '@ncigdc/uikit/Flex';
import { withTheme } from '@ncigdc/theme';
import { graphTitle } from '@ncigdc/theme/mixins';
import BarChart from '@ncigdc/components/Charts/BarChart';
import GeneTable from '@ncigdc/components/GeneTable';
import DownloadVisualizationButton from './DownloadVisualizationButton';
import SurvivalPlotWrapper from './SurvivalPlotWrapper';

const styles = {
  column: {
    flexGrow: 1,
  },
};

const enhance = compose(
  withTheme,
  withSize()
);

type TProps = {
  mutatedGenesChartData: Array<Object>,
  mutatedGenesTableData: Array<Object>,
  numCasesAggByProject: Object,
  survivalData: Object,
  setSelectedSurvivalData: Function,
  selectedSurvivalData: Object,
  size: {
    width: number,
  },
  totalNumCases: number,
  projectId: string,
  theme: Object,
  survivalPlotloading: boolean,
};

const FrequentlyMutatedGenes = ({
  mutatedGenesChartData,
  mutatedGenesTableData,
  numCasesAggByProject,
  survivalData,
  setSelectedSurvivalData,
  selectedSurvivalData,
  size: {
    width,
  },
  totalNumCases,
  projectId,
  theme,
  survivalPlotloading,
}: TProps) => {
  const chartMargin = { top: 30, right: 50, bottom: 55, left: 30 };
  const bandWidth = ((width - chartMargin.right - chartMargin.left) / (mutatedGenesChartData.length + 1) / 2) * 0.7;

  return (
    <span>
      <Row style={{ paddingBottom: '2.5rem' }}>
        <span style={{ flex: 1 }}>
          <div style={{ textAlign: 'right', marginRight: 50, marginLeft: 30 }}>
            <DownloadVisualizationButton
              disabled={!mutatedGenesChartData.length}
              svg="#mutated-genes-chart svg"
              data={mutatedGenesChartData}
              slug="bar-chart"
              tooltipHTML="Download image or data"
              noText
            />
          </div>
          <div style={graphTitle}>Distribution of Most Frequently Mutated Genes</div>
          {!!mutatedGenesChartData.length &&
            <div id="mutated-genes-chart">
              <Row style={{ padding: '2rem 2rem 0', justifyContent: 'center' }}>
                <BarChart
                  data={
                    mutatedGenesChartData
                      .sort((a, b) => b.num_affected_cases_all - a.num_affected_cases_all)
                      .map(g => ({
                        label: g.symbol,
                        value: projectId
                          ? ((g.num_affected_cases_project / numCasesAggByProject[projectId]) * 100)
                          : g.num_affected_cases_all / totalNumCases,
                        tooltip: projectId
                        ? (
                          <span>
                            <b>{g.symbol}</b><br />
                            {g.num_affected_cases_project} Case{g.num_affected_cases_project > 1 ? 's' : ''}
                            &nbsp;affected in {projectId}<br />
                            {g.num_affected_cases_project} / {numCasesAggByProject[projectId]}
                            &nbsp;({((g.num_affected_cases_project / numCasesAggByProject[projectId]) * 100)
                            .toFixed(2)}%)
                          </span>
                        )
                        : (
                          <span><b>{g.symbol}</b><br />
                            <b>{g.num_affected_cases_all} Case{g.num_affected_cases_all > 1 ? 's ' : ' '}
                              &nbsp;affected in all projects</b><br />
                            <b>{g.num_affected_cases_all} / {totalNumCases}
                            &nbsp;({((g.num_affected_cases_all / totalNumCases) * 100).toFixed(2)}%)</b>
                          </span>
                        ),
                        href: `genes/${g.gene_id}`,
                      }))
                  }
                  yAxis={{ title: '% of Cases Affected' }}
                  bandwidth={bandWidth}
                  margin={chartMargin}
                  height={260}
                  styles={{
                    xAxis: { stroke: theme.greyScale4, textFill: theme.greyScale3 },
                    yAxis: { stroke: theme.greyScale4, textFill: theme.greyScale3 },
                    bars: { fill: theme.secondary },
                    tooltips: {
                      fill: '#fff',
                      stroke: theme.greyScale4,
                      textFill: theme.greyScale3,
                    },
                  }}
                />
              </Row>
            </div>
          }
        </span>
        <span style={{ ...styles.column, flex: 1 }}>
          <SurvivalPlotWrapper
            {...survivalData}
            onReset={() => setSelectedSurvivalData({})}
            height={240}
            width={width}
            survivalPlotloading={survivalPlotloading}
          />
        </span>
      </Row>
      <Column>
        {!!mutatedGenesTableData.length &&
          <GeneTable
            numCasesAggByProject={numCasesAggByProject}
            projectId={projectId}
            totalNumCases={totalNumCases}
            selectedSurvivalData={selectedSurvivalData}
            setSelectedSurvivalData={setSelectedSurvivalData}
            mutatedGenesChartData={mutatedGenesTableData}
            showSurvivalPlot
          />
        }
        {!mutatedGenesTableData.length &&
          <span style={{ padding: '2rem' }}>No mutated gene data to display</span>
        }
      </Column>
    </span>
  );
};

export default enhance(FrequentlyMutatedGenes);
