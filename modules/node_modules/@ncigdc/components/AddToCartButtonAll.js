// @flow

import React from 'react';
import { connect } from 'react-redux';
import { css, style, hover } from 'glamor';

import _ from 'lodash';

import { parseFilterParam } from '@ncigdc/utils/uri';
import LocationSubscriber from '@ncigdc/components/LocationSubscriber';
import ShoppingCartIcon from 'react-icons/lib/fa/shopping-cart';
import DownCaretIcon from 'react-icons/lib/fa/caret-down';
import TrashIcon from 'react-icons/lib/fa/trash';

import { addAllFilesInCart, removeAllInCart, toggleFilesInCart } from '@ncigdc/dux/cart';

import { fetchApi } from '@ncigdc/utils/ajax';

import Row from '@ncigdc/uikit/Flex/Row';
import Column from '@ncigdc/uikit/Flex/Column';
import Dropdown from '@ncigdc/uikit/Dropdown';
import Button from '@ncigdc/uikit/Button';

import styled from '@ncigdc/theme/styled';

const styles= {
  cart: {
    padding: '0 5px',
    color: '#FFF',
    borderRadius: '4px',
    borderTopRightRadius: '0px',
    borderBottomRightRadius: '0px',
    cursor: 'pointer',
  },
  addToCart: {
    backgroundColor: '#0d95a1',
  },
  removeFromCart: {
    backgroundColor: '#255425',
  }
};

const DropDownCaret = styled.span({
  backgroundColor: '#FFF',
  borderTopRightRadius: '4px',
  borderBottomRightRadius: '4px',
});

const DropDownStyle = {
  position: 'absolute',
  right: 'initial',
  left: '-25px',
  marginTop: '5px',
  borderRadius: '4px'
};

const DropDownItemStyle = {
  padding: '3px 20px',
  margin: '5px 0',
  fontWeight: 'normal',
}

const filesInCart = (edges, files) => {
  if(files.length < edges.length) return false;
  else return _.every(edges, edge => _.some(files, {'file_id':edge.file_id}))
}

const getAllFiles = async (currentFilters, size) => {
  const data = await fetchApi('files', {
    filters: currentFilters,
    size
  });
  console.log(data);
}

const AddToCartButtonAll = ({ edges, files, size, dispatch }) => (
  <LocationSubscriber>{ctx => {
    const { filters, ...query } = ctx.query || {};
    const currentFilters = parseFilterParam(filters, { content: [] });

    return (
      <Row>
        <Button
          onClick={() => filesInCart(edges, files) ? dispatch(toggleFilesInCart(edges)) : dispatch(addAllFilesInCart(edges))}
          {...style({ ...styles.cart, ...(filesInCart(edges, files) ? styles.removeFromCart : styles.addToCart) })}
          {...hover({ ...(filesInCart(edges, files) ? styles.removeFromCart : styles.addToCart) })}
        >
          <ShoppingCartIcon />
        </Button>
        <Dropdown
          dropdownStyle={DropDownStyle}
          itemStyle={DropDownItemStyle}
          button={
            <Row>
              <DropDownCaret>
                <DownCaretIcon style={{ marginLeft: 'auto' }} />
              </DropDownCaret>
            </Row>
          }
        >
          <span
            onClick={() => getAllFiles(currentFilters, size)}
          >
            <ShoppingCartIcon /> Add all files to the Cart
          </span>
          <span
            onClick={() => dispatch(removeAllInCart())}
          >
            <TrashIcon /> Remove all from the Cart
          </span>
        </Dropdown>
      </Row>
    );
  }}</LocationSubscriber>
);

export default connect(state => state.cart)(AddToCartButtonAll);