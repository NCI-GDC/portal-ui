/* @flow */
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';
import { parse } from 'query-string';
import { connect } from 'react-redux';
import JSURL from 'jsurl';

import CartPage from '@ncigdc/containers/CartPage';
import { parseIntParam } from '@ncigdc/utils/uri';
import { setFilter } from '@ncigdc/utils/filters';

import { viewerQuery } from './queries';

const DEFAULT_FILES_SORT = null;

class CartRoute extends Relay.Route {
  static routeName = 'CartRoute';
  static queries = viewerQuery;
  static prepareParams = ({ location: { search }, files }) => {
    const q = parse(search);
    const filesSort = q.files_sort ? JSURL.parse(q.files_sort) : DEFAULT_FILES_SORT;

    return ({
      files_offset: parseIntParam(q.files_offset, 0),
      files_size: parseIntParam(q.files_size, 20),
      files_sort: filesSort,
      filters: files.length ? setFilter({ field: 'files.file_id', value: files.map(f => f.file_id) }) : null,
    });
  }
}

export default connect(state => (state.cart))(
  (props: mixed) => (
    <Relay.Renderer
      Container={CartPage}
      queryConfig={new CartRoute(props)}
      environment={Relay.Store}
    />
  )
);
