/* @flow */
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';
import { connect } from 'react-redux';
import { handleStateChange } from '@ncigdc/dux/relayProgress';
import HomePage, { HomePageComponent } from '@ncigdc/containers/HomePage';
import { updateCachedComponent } from '@ncigdc/dux/cachedComponent';
import { viewerQuery } from './queries';

class HomeRoute extends Relay.Route {
  static routeName = 'HomePageRoute';
  static queries = viewerQuery;
}

export default connect(state => state.cachedComponent)(({ path, component, ...props }) => (
  <Relay.Renderer
    Container={HomePage}
    queryConfig={new HomeRoute(props)}
    environment={Relay.Store}
    onReadyStateChange={handleStateChange(props)}
    render={({ props: relayProps }) => {
      if (path === HomeRoute.routeName) return component;
      if (relayProps) {
        const cached = <HomePage {...relayProps} />;
        props.dispatch(updateCachedComponent({
          component: cached,
          path: HomeRoute.routeName,
        }));
        return cached;
      }
      return component || <HomePageComponent />;
    }}
  />
));
