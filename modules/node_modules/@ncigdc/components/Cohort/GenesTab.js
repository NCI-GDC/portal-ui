/* global API */
// @flow
import React from 'react';
import LocationSubscriber from '@ncigdc/components/LocationSubscriber';
import { compose, withState, lifecycle } from 'recompose';

import { fetchApi } from '@ncigdc/utils/ajax';
import { Row, Column } from '@ncigdc/uikit/Flex';
import { parseFilterParam } from '@ncigdc/utils/uri';
import { getDefaultCurve } from '@ncigdc/utils/survivalplot';
import type { TRawQuery } from '@ncigdc/utils/uri/types';

import FrequentlyMutatedGenesChart from '@ncigdc/containers/FrequentlyMutatedGenesChart';
import FrequentlyMutatedGenesTable from '@ncigdc/containers/FrequentlyMutatedGenesTable';

const styles = {
  heading: {
    flexGrow: 1,
    fontSize: '2rem',
    marginBottom: 7,
    marginTop: 7,
  },
  card: {
    backgroundColor: 'white',
  },
};

const initialState = {
  loading: true,
  defaultSurvivalData: {},
  numCasesAggByProject: {},
};

export default
compose(
  withState('selectedMutatedGenesSurvivalData', 'setSelectedMutatedGenesSurvivalData', {}),
  withState('state', 'setState', initialState),
  lifecycle({
    async componentDidMount(): Promise<*> {
      const data1 = await fetchApi(
        'analysis/mutated_cases_count_by_project?size=0',
        { headers: { 'Content-Type': 'application/json' } }
      );

      const numCasesAggByProject = data1.aggregations.projects.buckets.reduce((acc, b) => {
        acc[b.key] = b.case_summary.case_with_ssm.doc_count;
        return acc;
      }, {});

      const defaultSurvivalData = await getDefaultCurve({});

      this.props.setState(s => ({
        ...s,
        loading: false,
        numCasesAggByProject,
        defaultSurvivalData,
      }));
    },
  })
)(({
  state: {
    numCasesAggByProject,
    defaultSurvivalData,
  },
  setSelectedMutatedGenesSurvivalData,
  selectedMutatedGenesSurvivalData,
  viewer,
}) => {
  const mutatedGenesSurvivalData = {
    legend: selectedMutatedGenesSurvivalData.legend || defaultSurvivalData.legend,
    rawData: selectedMutatedGenesSurvivalData.rawData || defaultSurvivalData.rawData,
  };

  return (
    <Column style={styles.card}>
      <h1 style={{ ...styles.heading, padding: '1rem' }} id="mutated-genes">
        <i className="fa fa-bar-chart-o" style={{ paddingRight: '10px' }} />
        Genes
      </h1>

      <Column>
        <Row>
          <Column flex="none" style={{ width: '50%' }}>
            <FrequentlyMutatedGenesChart
              cohort={viewer.frequentlyMutatedGenesChartFragment}
              numCasesAggByProject={numCasesAggByProject}
            />
          </Column>
          <Column flex="none" style={{ width: '50%' }}>
            {/* <SurvivalPlotWrapper
              {...mutatedGenesSurvivalData}
              onReset={() => setSelectedMutatedGenesSurvivalData({})}
              height={240}
              survivalPlotloading={loadingSurvival}
            /> */}
          </Column>
        </Row>
        <FrequentlyMutatedGenesTable
          survivalData={mutatedGenesSurvivalData}
          setSelectedSurvivalData={setSelectedMutatedGenesSurvivalData}
          selectedSurvivalData={selectedMutatedGenesSurvivalData}
          // defaultFilters={fmFilters}
          cohort={viewer.frequentlyMutatedGenesTableFragment}
          numCasesAggByProject={numCasesAggByProject}
          projectBreakdown={viewer.geneProjectBreakdownFragment}
        />
      </Column>
    </Column>
  );
});
