/* @flow */

import React from 'react';
import Relay from 'react-relay';
import { LocationSubscriber } from 'react-router/Broadcasts';

import SearchPage from '@ncigdc/components/SearchPage';
import ProjectsCharts from '@ncigdc/components/ProjectsCharts';

import ProjectTable from './ProjectTable';
import ProjectAggregations from './ProjectAggregations';

export type TProps = {
  viewer: {
    projects: {
      aggregations: string,
      hits: string,
    },
  },
};

export const ProjectsPageComponent = (props: TProps) => (
  <SearchPage
    Facets={<ProjectAggregations aggregations={props.viewer.projects.aggregations} />}
    Results={<ProjectTable hits={props.viewer.projects.hits} />}
    charts={<LocationSubscriber>{(ctx: {| pathname: string, query: TRawQuery |}) => {
      return (
        <ProjectsCharts
          hits={props.viewer.projects.hits}
          query={ctx.query}
          pathname={ctx.pathname}
        />
      );
    }}</LocationSubscriber>}
  />
);

export const ProjectsPageQuery = {
  initialVariables: {
    size: 1000,
    offset: null,
    filters: null,
    sort: null,
  },
  fragments: {
    viewer: () => Relay.QL`
      fragment on Root {
        projects {
          aggregations(filters: $filters) {
            ${ProjectAggregations.getFragment('aggregations')}
          }
          hits(first: $size offset: $offset, sort: $sort, filters: $filters) {
            ${ProjectTable.getFragment('hits')}
            ${ProjectsCharts.getFragment('hits')}
          }
        }
      }
    `,
  },
};

const ProjectsPage = Relay.createContainer(
  ProjectsPageComponent,
  ProjectsPageQuery
);

export default ProjectsPage;
