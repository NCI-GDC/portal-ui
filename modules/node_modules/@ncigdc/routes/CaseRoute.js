/* @flow */
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';
import { parse } from 'query-string';
import JSURL from 'jsurl';

import CasePage from '@ncigdc/containers/CasePage';
import { parseIntParam, parseFilterParam } from '@ncigdc/utils/uri';

import { nodeAndViewerQuery } from './queries';

const DEFAULT_FILES_SORT = null;

class CaseRoute extends Relay.Route {
  static routeName = 'CasePageRoute';
  static queries = nodeAndViewerQuery;
  static prepareParams = ({ match: { params }, location: { search } }) => {
    const q = parse(search);
    const filesSort = q.files_sort ? JSURL.parse(q.files_sort) : DEFAULT_FILES_SORT;

    return ({
      id: btoa(`Case:${params.id}`),
      files_offset: parseIntParam(q.files_offset, 0),
      files_size: parseIntParam(q.files_size, 20),
      files_sort: filesSort,
      filters: parseFilterParam(q.filters, null),
    });
  }
}

export default (props: mixed) => (
  <Relay.Renderer
    Container={CasePage}
    queryConfig={new CaseRoute(props)}
    environment={Relay.Store}
  />
);
