/* @flow */
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';
import { parse } from 'query-string';

import ProjectsPage from '@ncigdc/containers/ProjectsPage';
import { parseIntParam, parseFilterParam } from '@ncigdc/utils/uri';

import { viewerQuery } from './queries';

class ProjectsRoute extends Relay.Route {
  static routeName = 'ProjectsRoute';
  static queries = viewerQuery;
  static prepareParams = ({ location: { search } }) => {
    const q = parse(search);
    return ({
      offset: parseIntParam(q.offset, 0),
      size: 1000,
      filters: parseFilterParam(q.filters, null),
      sort: q.sort || 'summary.case_count',
    });
  }
}

export default (props: mixed) => (
  <Relay.Renderer
    Container={ProjectsPage}
    queryConfig={new ProjectsRoute(props)}
    environment={Relay.Store}
  />
);
