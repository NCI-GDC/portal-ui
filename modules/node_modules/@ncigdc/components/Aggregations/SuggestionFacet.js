// @flow

// Vendor
import React from 'react';
import { compose, withState, mapProps, pure } from 'recompose';
import { Link } from 'react-router';
import AngleIcon from 'react-icons/lib/fa/angle-down';
import SearchIcon from 'react-icons/lib/fa/search';
import UserIcon from 'react-icons/lib/fa/user';

// Custom
import { mergeFilters, setFilters, setFilter, inCurrentFilters } from '@ncigdc/utils/filters';
import { Row, Column } from '@ncigdc/uikit/Flex';
import Input from '@ncigdc/uikit/Form/Input';
import withDropdown from '@ncigdc/uikit/withDropdown';
import styled from '@ncigdc/theme/styled';
import { dropdown } from '@ncigdc/theme/mixins';

/*----------------------------------------------------------------------------*/

const Container = styled(Column, {
  padding: '1rem 1.2rem',
});

const Header = styled(Row, {
  color: ({ theme }) => theme.primary,
  fontSize: '1.7rem',
  marginBottom: '0.5rem',
  cursor: 'pointer',
});

const MagnifyingGlass = styled(SearchIcon, {
  backgroundColor: ({ theme }) => theme.greyScale5,
  color: ({ theme }) => theme.greyScale2,
  padding: '0.8rem',
  width: '3.4rem',
  height: '3.4rem',
  borderRadius: '4px 0 0 4px',
  border: ({ theme }) => `1px solid ${theme.greyScale4}`,
  borderRight: 'none',
});

let input;

const SuggestionFacet = compose(
  withDropdown,
  withState('state', 'setState', { collapsed: false }),
  mapProps(({ setState, ...rest }) => ({
    toggleCollapsed: () => setState(state => ({ collapsed: !state.collapsed })),
    ...rest,
  })),
  pure
)(({
  title,
  state,
  toggleCollapsed,
  placeholder,
  hits,
  setAutocomplete,
}) => {
  // const { filters, offset, ...query } = location.query
  // const dotField = field.replace(/__/g, '.')
  // const currentFilters = location.query.filters ? JSON.parse(filters).content : []
  return (
    <Container>
      <Header onClick={() => toggleCollapsed()}>
        <AngleIcon style={{ transform: `rotate(${state.collapsed ? 270 : 0}deg)` }} />
        {title}
      </Header>
      {!state.collapsed &&
        <Row>
          <MagnifyingGlass />
          <Input
            getNode={node => { input = node; }}
            onChange={() => setAutocomplete(input.value)}
            placeholder={placeholder}
          />
          {!!(hits.edges || []).length &&
            <Column style={{ ...dropdown, marginTop: 0, top: '35px' }}>
              {hits.edges.map(x =>
                <Row key={x.node.case_id} style={{ alignItems: 'center' }}>
                  <UserIcon style={{ marginLeft: '0.5rem', padding: '0.65rem', height: '4rem', width: '4rem' }} />
                  <Column style={{ padding: '1rem' }}>
                    <Row>{x.node.case_id}</Row>
                    <Row style={{ fontSize: '0.8em' }}>{x.node.project.project_id}</Row>
                  </Column>
                </Row>
              )}
            </Column>
          }
        </Row>
      }
    </Container>
  );
});

/*----------------------------------------------------------------------------*/

export default SuggestionFacet;
