// @flow

import React from 'react';
import Relay from 'react-relay';
import EntityPageVerticalTable from '@ncigdc/components/EntityPageVerticalTable';
import externalReferenceLinks from '@ncigdc/utils/externalReferenceLinks';
import { ExternalLink } from '@ncigdc/uikit/Links';
import BookIcon from '@ncigdc/theme/icons/Book';

type TProps = {
  node: Object,
};

const GeneExternalReferencesComponent = ({ node: gene }: TProps = {}) => (
  <EntityPageVerticalTable
    title={<span><BookIcon style={{ marginRight: '1rem' }} /> External References</span>}
    thToTd={
      Object.keys(gene.external_db_ids || {})
      .filter(x => x !== '__dataID__')
      .map(db => ({
        th: db.replace(/_/g, ' '),
        td: (
          <ExternalLink
            href={externalReferenceLinks[db](gene.external_db_ids[db][0])}
          >
            {gene.external_db_ids[db]}
          </ExternalLink>
        ),
      }))
    }
    style={{ flex: 1 }}
  />
);

export const GeneExternalReferencesQuery = {
  fragments: {
    node: () => Relay.QL`
      fragment on Gene {
        external_db_ids {
          entrez_gene
          uniprotkb_swissprot
          hgnc
          omim_gene
        }
      }
    `,
  },
};

const GeneExternalReferences = Relay.createContainer(
  GeneExternalReferencesComponent,
  GeneExternalReferencesQuery
);

export default GeneExternalReferences;
