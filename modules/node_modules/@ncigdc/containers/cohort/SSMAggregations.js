/* @flow */

import React from 'react';
import Relay from 'react-relay';

import TermAggregation from '@ncigdc/components/Aggregations/TermAggregation';
import SuggestionFacet from '@ncigdc/components/Aggregations/SuggestionFacet';

import type { TBucket } from '@ncigdc/components/Aggregations/types';

import { withTheme } from '@ncigdc/theme';
import { Column } from '@ncigdc/uikit/Flex';

export type TProps = {
  aggregations: {
    consequence__transcript__annotation__impact: { buckets: [TBucket] },
    consequence__transcript__consequence_type: { buckets: [TBucket] },
    mutation_type: { buckets: [TBucket] },
    occurrence__case__summary__data_categories__data_category: { buckets: [TBucket] },
  },
  hits: {
    edges: Array<{|
      node: {|
       id: string,
     |},
   |}>,
 },
  setAutocomplete: Function,
  theme: Object,
};

export const SSMAggregationsComponent = (props: TProps) => (
  <div>
    <SuggestionFacet
      title="Mutation"
      doctype="ssms"
      fieldNoDoctype="ssm_id"
      placeholder="Search for mutation id"
      hits={props.suggestions}
      setAutocomplete={() => { /* autcomplete turned off for now */ }}
      dropdownItem={(x) => (
        <span style={{ display: 'flex' }}>
          <Column>
            <span style={{ fontWeight: 'bold' }}>
              {x.node.ssm_id}
            </span>
          </Column>
        </span>
      )}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'ssms.consequence__transcript__annotation__impact'}
      title="Impact"
      buckets={props.aggregations.consequence__transcript__annotation__impact.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'ssms.consequence__transcript__consequence_type'}
      title="Consequence Type"
      buckets={props.aggregations.consequence__transcript__consequence_type.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'ssms.mutation_type'}
      title="Mutation Type"
      buckets={props.aggregations.mutation_type.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'ssms.occurrence__case__summary__data_categories__data_category'}
      title="Data Categories"
      buckets={props.aggregations.occurrence__case__summary__data_categories__data_category.buckets}
    />
  </div>
);

export const SSMAggregationsQuery = {
  fragments: {
    aggregations: () => Relay.QL`
      fragment on CohortSSMAggregations {
        consequence__transcript__annotation__impact {
          buckets {
            doc_count
            key
          }
        }
        consequence__transcript__consequence_type {
          buckets {
            doc_count
            key
          }
        }
        mutation_type {
          buckets {
            doc_count
            key
          }
        }
        occurrence__case__summary__data_categories__data_category {
          buckets {
            doc_count
            key
          }
        }
      }
    `,
  },
};


const SSMAggregations = Relay.createContainer(
  withTheme(SSMAggregationsComponent),
  SSMAggregationsQuery
);

export default SSMAggregations;
