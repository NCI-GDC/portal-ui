/* @flow */

import React from 'react';
import Relay from 'react-relay';
import { compose, lifecycle } from 'recompose';

import { makeFilter } from '@ncigdc/utils/filters';
import SideNavLayout from '@ncigdc/components/Layouts/SideNavLayout';
import SSM from '@ncigdc/components/SSM';

export type TProps = {
  node: {
    genomic_dna_change: string,
  },
  viewer: {
    cohort: {
      cases: {
        aggregations: {
          project__project_id: {
            buckets: Array<Object>,
          },
        },
      },
    },
  },
};

export const SSMPageComponent = compose(
  lifecycle({
    componentDidMount() {
      const transcript = this.props.node.consequence.hits.edges.find(x =>
        x.node.transcript.is_canonical
      ).transcript;

      const { transcript_id: tid, gene: { gene_id: geneId } = {} } = transcript;

      this.props.relay.setVariables({
        fetchSsms: true,
        filters: makeFilter([
          {
            field: 'consequence.transcript.gene.gene_id',
            value: [this.props.node.gene_id],
          },
          {
            field: 'consequence.transcript.transcript_id',
            value: [transcript.transcript_id],
          },
        ], false),
      })
    }
  })
)((props: TProps) => (
  <SideNavLayout
    links={[
      { icon: 'table', id: 'summary', title: 'Summary' },
      { icon: 'table', id: 'consequences', title: 'Consequences' },
      { icon: 'table', id: 'cancer-distribution', title: 'Cancer Distribution' },
      { icon: 'table', id: 'protein', title: 'Protein' },
    ]}
    title={props.node.genomic_dna_change}
    entityType={<i className="fa fa-file-o" />}
  >
    <SSM
      node={props.node}
      allCasesAgg={props.viewer.cohort.cases.aggregations.project__project_id.buckets}
    />
  </SideNavLayout>
));

export const SSMPageQuery = {
  initialVariables: {
    score: 'occurrence.case.project.project_id',
    fetchVizData: false,
    geneFilters: null,
    ssmFilters: null,
  },
  fragments: {
    node: () => Relay.QL`
      fragment on Ssm {
        ssm_id
        chromosome
        start_position
        reference_allele
        genomic_dna_change
        tumor_allele
        variant_type
        ncbi_build
        consequence {
          hits(first: 99) {
            edges {
              node {
                transcript {
                  aa_change
                  consequence_type
                  transcript_id
                  is_canonical
                  transcript_id
                  annotation {
                    impact
                    hgvsc
                  }
                  gene {
                    external_db_ids {
                      entrez_gene
                      uniprotkb_swissprot
                      hgnc
                      omim_gene
                    }
                    symbol
                    gene_strand
                    gene_id
                  }
                }
              }
            }
          }
        }
        occurrence {
          hits(first: 99) {
            edges {
              node {
                case {
                  case_id
                  disease_type
                  primary_site
                  project {
                    project_id
                  }
                }
              }
            }
          }
        }
      }
    `,
    viewer: () => Relay.QL`
      fragment on Root {
        cohort {
          cases {
            aggregations {
              project__project_id {
                buckets {
                  doc_count
                  key
                }
              }
            }
          }
          genes @include(if: $fetchVizData) {
            hits(first: 1 filters: $geneFilters) {
              edges {
                node {
                  transcripts {
                    hits(first: 99) {
                      edges {
                        node {
                          transcript_id
                          is_canonical
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        ssms @include(if: $fetchVizData) {
          hits(first: 100 filters: $ssmFilters score: $score) {
            total
            edges {
              node {
                score
                ssm_id
                genomic_dna_change
                occurrence {
                  hits(first: 99) {
                    edges {
                      node {
                        case {
                          case_id
                          disease_type
                          primary_site
                          project {
                            project_id
                          }
                        }
                      }
                    }
                  }
                }
                consequence {
                  hits(first: 99) {
                    edges {
                      node {
                        transcript {
                          is_canonical
                          consequence_type
                          gene {
                            gene_id
                            symbol
                          }
                          aa_change
                          transcript_id
                          aa_start
                          annotation {
                            impact
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    `,
  },
};

const SSMPage = Relay.createContainer(
  SSMPageComponent,
  SSMPageQuery
);

export default SSMPage;
