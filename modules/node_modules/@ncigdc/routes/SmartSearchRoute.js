// @flow
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';

import SmartSearchPage from '@ncigdc/containers/SmartSearchPage';
import { parseIntParam, parseFilterParam } from '@ncigdc/utils/uri';

import { viewerQuery } from './queries';

class SmartSearchRoute extends Relay.Route {
  static routeName = 'RepositoryRoute';
  static queries = viewerQuery;
  static prepareParams = ({ location: { query } }) => {
    const q = query || {};
    return ({
      cases_offset: parseIntParam(q.cases_offset, 0),
      cases_size: parseIntParam(q.cases_size, 20),
      cases_sort: q.cases_sort || '',
      files_offset: parseIntParam(q.files_offset, 0),
      files_size: parseIntParam(q.files_size, 20),
      files_sort: q.files_sort || '',
      filters: parseFilterParam(q.filters, null),
    });
  }
}

export default (props: mixed) => (
  <Relay.Renderer
    Container={SmartSearchPage}
    queryConfig={new SmartSearchRoute(props)}
    environment={Relay.Store}
  />
);
