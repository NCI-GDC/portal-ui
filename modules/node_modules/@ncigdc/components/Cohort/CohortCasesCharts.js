// @flow

import React from 'react';
import Relay from 'react-relay';
import LocationSubscriber from '@ncigdc/components/LocationSubscriber';
import PieChart from '@ncigdc/components/Charts/PieChart';
import { Row, Column } from '@ncigdc/uikit/Flex';
import styled from '@ncigdc/theme/styled';
import type { TRawQuery } from '@ncigdc/utils/uri/types';
import { parseFilterParam } from '@ncigdc/utils/uri';
import type { TBucket } from '@ncigdc/components/Aggregations/types';

export type TProps = {
  aggregations: {
    demographic__ethnicity: { buckets: [TBucket] },
    demographic__gender: { buckets: [TBucket] },
    demographic__race: { buckets: [TBucket] },
    diagnoses__vital_status: { buckets: [TBucket] },
    project__disease_type: { buckets: [TBucket] },
    project__primary_site: { buckets: [TBucket] },
    project__program__name: { buckets: [TBucket] },
    project__project_id: { buckets: [TBucket] },
  },
};

const toPieData = bucket => ({
  id: bucket.key,
  doc_count: bucket.doc_count,
  tooltip: (
    <span>
      <b>{bucket.key}</b><br />
      {bucket.doc_count} case{bucket.doc_count > 1 ? 's' : 0}
    </span>
  ),
});

const ColumnCenter = styled(Column, {
  justifyContent: 'center',
  alignItems: 'center',
});

const RowCenter = styled(Row, {
  justifyContent: 'space-around',
  alignItems: 'center',
});

const PieTitle = styled.h4({
  color: ({ theme }) => theme.primary || 'inherit',
});

const CohortCasesChartsComponent = (props: TProps) => (
  <LocationSubscriber>{(ctx: {| pathname: string, query: TRawQuery |}) => {
    const { filters } = ctx.query || {};
    const currentFilters = parseFilterParam(filters, { content: [] }).content;
    return (
      <RowCenter>
        <ColumnCenter>
          <PieTitle>Projects</PieTitle>
          <PieChart
            data={props.aggregations.project__project_id.buckets.map(toPieData)}
            path="doc_count"
            height={125}
            width={125}
          />
        </ColumnCenter>
        <ColumnCenter>
          <PieTitle>Primary Sites</PieTitle>
          <PieChart
            data={props.aggregations.project__primary_site.buckets.map(toPieData)}
            path="doc_count"
            height={125}
            width={125}
          />
        </ColumnCenter>
        <ColumnCenter>
          <PieTitle>Gender</PieTitle>
          <PieChart
            data={props.aggregations.demographic__gender.buckets.map(toPieData)}
            path="doc_count"
            height={125}
            width={125}
          />
        </ColumnCenter>
        <ColumnCenter>
          <PieTitle>Vital Status</PieTitle>
          <PieChart
            data={props.aggregations.diagnoses__vital_status.buckets.map(toPieData)}
            path="doc_count"
            height={125}
            width={125}
          />
        </ColumnCenter>
        <ColumnCenter>
          <PieTitle>Disease Type</PieTitle>
          <PieChart
            data={props.aggregations.project__disease_type.buckets.map(toPieData)}
            path="doc_count"
            height={125}
            width={125}
          />
        </ColumnCenter>
      </RowCenter>
    );
  }}</LocationSubscriber>
);

export const CohortCasesChartsQuery = {
  fragments: {
    aggregations: () => Relay.QL`
      fragment on CohortCaseAggregations {
        demographic__ethnicity {
          buckets {
            doc_count
            key
          }
        }
        demographic__gender {
          buckets {
            doc_count
            key
          }
        }
        demographic__race {
          buckets {
            doc_count
            key
          }
        }
        diagnoses__vital_status {
          buckets {
            doc_count
            key
          }
        }
        project__disease_type {
          buckets {
            doc_count
            key
          }
        }
        project__primary_site {
          buckets {
            doc_count
            key
          }
        }
        project__project_id {
          buckets {
            doc_count
            key
          }
        }
        project__program__name {
          buckets {
            doc_count
            key
          }
        }
      }
    `,
  },
};


const CohortCasesCharts = Relay.createContainer(
  CohortCasesChartsComponent,
  CohortCasesChartsQuery
);

export default CohortCasesCharts;
