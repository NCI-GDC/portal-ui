// @flow

import React, { Children, cloneElement } from 'react';
import _ from 'lodash';
import DownCaretIcon from 'react-icons/lib/fa/caret-down';
import * as styles from '@ncigdc/theme/mixins';
import withDropdown from './withDropdown';
import { Row, Column } from './Flex';

const Dropdown = ({
  style,
  selected,
  active,
  setActive,
  mouseDownHandler,
  mouseUpHandler,
  children,
  dropdownStyle = {},
  dropdownClassName = '',
  itemStyle = {},
  dropdownItemClass = true,
  button = null,
  isDisabled = false,
}) => (
  <span onClick={() => !isDisabled && setActive(true)} style={{ position: 'relative', ...style }}>
    {button ||
      <Row style={styles.dropdownButton}>
        <span>{selected}</span>
        <DownCaretIcon style={{ marginLeft: 'auto' }} />
      </Row>
    }
    {active &&
      <Column
        className={dropdownClassName}
        style={{ ...styles.dropdown, ...dropdownStyle }}
        onMouseDown={mouseDownHandler}
        onMouseUp={mouseUpHandler}
        onClick={() => setTimeout(() => setActive(false))}
      >
        {Children.toArray(children).filter(React.isValidElement).map((child, i) =>
          <Row className={`${dropdownItemClass ? 'dropdown-item' : ''}`}>
            {cloneElement(child, {
              key: child.key || i,
              ...child.props,
              style: { ...(child.props || {}).style, ...styles.dropdownLink, ...itemStyle },
            })}
          </Row>
        )}
      </Column>
    }
  </span>
);

export default withDropdown(Dropdown);
