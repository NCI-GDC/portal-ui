// @flow
import React from 'react';
import _ from 'lodash';
import { Td } from '@ncigdc/uikit/Table';
import CaseLink from '@ncigdc/components/Links/CaseLink';
import AddCaseFilesToCartButton from '@ncigdc/components/AddCaseFilesToCartButton';

function massageRelayFiles(files: Object): Array {
  return _.get(files, 'hits.edges', [])
    .map(edge => edge.node)
    .map(file => ({
      ...file,
      cases: file.cases.hits.edges
      .map(edge => edge.node),
    }));
}

const addFiles = (caseFileCount, dataCategory) => (
  dataCategory.file_count + caseFileCount
);

/*
<Th rowSpan="2">Cart</Th>
              <Th rowSpan="2">Case UUID</Th>
              <Th rowSpan="2">Project</Th>
              <Th rowSpan="2">Primary Site</Th>
              <Th rowSpan="2">Gender</Th>
              <Th rowSpan="2">Files</Th>
              <Th colSpan="6">Available Files per Data Category</Th>
              <Th rowSpan="2">Annotations</Th>
            */

const casesTableModel = [
  {
    name: 'Case UUID',
    id: 'case_id',
    th: (
      ''
    ),
    td: node => (
      <Td>
        <AddCaseFilesToCartButton
          hasFiles={node.summary.data_categories.reduce(addFiles, 0) > 0}
          files={massageRelayFiles(node.files)}
          filteredFiles={massageRelayFiles(node.filteredFiles)}
          relay={relay}
          // dropdownStyle={total - 1 === index ? { top: 'auto', bottom: '100%' } : {}}
        />
      </Td>
    ),
  },
  {
    name: 'Case UUID',
    id: 'case_id',
    th: (
      ''
    ),
    td: node => (
      <Td><CaseLink id={node.case_id} merge whitelist={['filters']} /></Td>
    ),
  },
];

export default casesTableModel;
