/* @flow */

import React from 'react';

import DismissibleBanner from '@ncigdc/components/DismissibleBanner';

import { fetchApi } from '@ncigdc/utils/ajax';

const NOTIFICATION_SUCCESS = 'NOTIFICATION_SUCCESS';
const NOTIFICATION_DISMISS = 'NOTIFICATION_DISMISS';

const initialInfoBanner = {
  components:['PORTAL'],
  level:'INFO',
  id: 0,
  dismissible: true,
   message: <DismissibleBanner />,
};

export function fetchNotifications() {
  return async (dispatch) => {
    let response = await fetchApi(
      'notifications',
      { headers: { 'Content-Type': 'application/json' } }
    );

    let { data } = await response;

    // Data for initial information banner
    data.push(initialInfoBanner);
    
    dispatch({
      type: NOTIFICATION_SUCCESS,
      payload: data
    });
  };
}

export function dismissNotification(notificationID) {
  return {
    type: NOTIFICATION_DISMISS,
    payload: { id: notificationID }
  };
}

let initialState = [];

const reducer = (state = initialState, action) => {
  switch (action.type) {
    case NOTIFICATION_SUCCESS:
      return action.payload
       .filter(n => n.components.includes('PORTAL') || n.components.includes('API'))
       .map(n => ({ ...n, dismissed: false }));
    case NOTIFICATION_DISMISS:
      return state.map(n => (
        { ...n,
          dismissed: n.id === action.payload.id ? true : n.dismissed,
        }
      ));
    default:
      return state;
  }
};

export default reducer;
