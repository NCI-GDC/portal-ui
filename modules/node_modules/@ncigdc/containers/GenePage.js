/* @flow */

import React from 'react';
import Relay from 'react-relay';

import SideNavLayout from '@ncigdc/components/Layouts/SideNavLayout';
import Gene from '@ncigdc/components/Gene';

export type TProps = {
  node: {
    symbol: string,
  },
};

export const GenePageComponent = (props: TProps) => (
  <SideNavLayout
    links={[
      { icon: 'table', id: 'summary', title: 'Summary' },
    ]}
    title={props.node.symbol}
    entityType={<i className="fa fa-file-o" />}
  >
    <Gene node={props.node} />
  </SideNavLayout>
);

export const GenePageQuery = {
  fragments: {
    node: () => Relay.QL`
      fragment on Gene {
        description
        gene_id
        symbol
        name
        synonyms
        biotype
        gene_chromosome
        gene_start
        gene_end
        gene_strand
        canonical_transcript_id
        transcripts {
          hits(first: 99) {
            edges {
              node {
                is_canonical
                transcript_id
                length_amino_acid
                domains {
                  hit_name
                  start
                  end
                }
              }
            }
          }
        }
      }
    `,
  },
};

const GenePage = Relay.createContainer(
  GenePageComponent,
  GenePageQuery
);

export default GenePage;
