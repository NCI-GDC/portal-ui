// @flow

// Vendor
import React, { PropTypes } from 'react';

import { connect } from 'react-redux';
import { compose } from 'recompose';

import DownloadButton from '@ncigdc/components/DownloadButton';

import DownloadIcon from 'react-icons/lib/fa/download';
import DownCaretIcon from 'react-icons/lib/fa/caret-down';

import { setModal } from '@ncigdc/dux/modal';

// Custom
import withDropdown from '@ncigdc/uikit/withDropdown';
import Button from '@ncigdc/uikit/Button';
import { Column } from '@ncigdc/uikit/Flex';
import { dropdown } from '@ncigdc/theme/mixins';
import { withTheme } from '@ncigdc/theme';

import download from '@ncigdc/utils/download';
/*----------------------------------------------------------------------------*/

const styles = {
  button: {
    backgroundColor: 'transparent',
    color: '#000',
    justifyContent: 'flex-start',
    margin: '2px 0 0 0px',
    borderRadius: '0px',
    paddingLeft: '10px',
    ':hover': {
      backgroundColor: '#F5F5F5',
    },
  },
  iconSpacing: {
    marginRight: '0.6rem',
  },
};


const downloadCart = (files, dispatch) => {
  const controlledFiles = files.filter((file) => file.access === 'controlled');

  if (controlledFiles && controlledFiles.length) {
    dispatch(setModal(
      <Column
        style={{ margin: '-15px' }}
      >
        <div className="modal-header">
          <h4> Access Error </h4>
        </div>
        <div className="modal-body">
          <p>You are attempting to download files that you are not authorized to access.</p>
          <p>
            <span className='label label-success'>
              {files.length - controlledFiles.length}
            </span> files that you are authorized to download.
          </p>
          <p>
            <span className='label label-danger'>
              {controlledFiles.length}
            </span> files that you are not authorized to download.
          </p>
          <p>
            Please <a href=''>login <i className='fa fa-sign-in' /></a>
          </p>
        </div>
        <div
          className="modal-footer"
          style={{
            display: 'flex',
            flexDirection: 'row',
            justifyContent: 'flex-end',
          }}
        >
          <Button
            onClick={() => dispatch(setModal(null))}
            style={{ margin: '0 10px' }}
          >
            <span>Cancel</span>
          </Button>
          <Button
            onClick={() => downloadCart(files.filter((file) => file.access === 'open'), dispatch)}
            style={{ margin: '0 10px' }}
          >
            <span>Download {files.length - controlledFiles.length} authorized files</span>
          </Button>
        </div>
      </Column>
    ));
  } else {
    dispatch(setModal(null));

    download({
      url: 'http://gdc-portal.nci.nih.gov/auth/api/data',
      params: {
        ids: files.map((file) => file.file_id),
      },
      method: 'POST',
      altMessage: true,
      dispatch,
    })(
      () => {},
      () => {}
    );
  }
};

const CartDownloadButton = ({
  active,
  setActive,
  mouseDownHandler,
  mouseUpHandler,
  style,
  theme,
  files,
  dispatch,
}) => (
  <Button
    style={style}
    leftIcon={<DownloadIcon />}
    rightIcon={<DownCaretIcon />}
    onClick={() => setActive(true)}
  >
    Download

    {active &&
      <Column
        style={{ ...dropdown, borderRadius: '4px' }}
        onMouseDown={mouseDownHandler}
        onMouseUp={mouseUpHandler}
      >
        <DownloadButton
          style={styles.button}
          url={`http://gdc-portal.nci.nih.gov/auth/api/manifest`}
          activeText="Downloading"
          inactiveText="Manifest"
          altMessage={false}
          extraParams={{
            ids: files.files.map((file) => file.file_id),
          }}
        />
        <Button
          style={styles.button}
          onClick={() => downloadCart(files.files, dispatch)}
        >
          <DownloadIcon style={styles.iconSpacing} /> Cart
        </Button>
      </Column>
    }
  </Button>
);

CartDownloadButton.propTypes = {
  active: PropTypes.bool,
  setActive: PropTypes.func,
  mouseDownHandler: PropTypes.func,
  mouseUpHandler: PropTypes.func,
  style: PropTypes.object,
};

/*----------------------------------------------------------------------------*/

export default compose(
  connect(),
  withTheme,
  withDropdown
)(CartDownloadButton);
