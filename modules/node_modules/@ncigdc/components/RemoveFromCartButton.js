// @flow

// Vendor
import React, { PropTypes } from 'react';
import { connect } from 'react-redux';
import { compose } from 'recompose';
import XIcon from 'react-icons/lib/fa/close';
import DownCaretIcon from 'react-icons/lib/fa/caret-down';
import TrashIcon from 'react-icons/lib/fa/trash-o';

// Custom
import withDropdown from '@ncigdc/uikit/withDropdown';
import Button from '@ncigdc/uikit/Button';
import { Column, Row } from '@ncigdc/uikit/Flex';
import { dropdown } from '@ncigdc/theme/mixins';
import { withTheme } from '@ncigdc/theme';

import { toggleInCart } from '@ncigdc/dux/cart';

/*----------------------------------------------------------------------------*/

const styles = {
  row: theme => ({
    color: theme.greyScale2,
    padding: '0.6rem 1rem',
    ':hover': {
      backgroundColor: theme.greyScale6,
    },
  }),
  iconSpacing: {
    marginRight: '0.6rem',
  },
};

const getUnauthorizedFiles = (files) => files.filter((file) => file.access === 'controlled');

const RemoveFromCartButton = ({
  active,
  setActive,
  mouseDownHandler,
  mouseUpHandler,
  style,
  files,
  theme,
  dispatch
}) => (
  <Button
    style={style}
    leftIcon={<TrashIcon />}
    rightIcon={<DownCaretIcon />}
    onClick={() => setActive(true)}
  >
    Remove From Cart

    {active &&
      <Column
        style={{ ...dropdown, width: '22rem' }}
        onMouseDown={mouseDownHandler}
        onMouseUp={mouseUpHandler}
      >
        <Row
          style={styles.row(theme)}
          onClick={() => dispatch(toggleInCart(files))}
        >
          <XIcon style={styles.iconSpacing} />
          <span>
            All Files ({files.length})
          </span>
        </Row>
        <Row
          style={styles.row(theme)}
          onClick={() => dispatch(toggleInCart(getUnauthorizedFiles(files)))}
        >
          <XIcon style={styles.iconSpacing} /> Unauthorized Files ({getUnauthorizedFiles(files).length})
        </Row>
      </Column>

    }
  </Button>
);

RemoveFromCartButton.propTypes = {
  active: PropTypes.bool,
  setActive: PropTypes.func,
  mouseDownHandler: PropTypes.func,
  mouseUpHandler: PropTypes.func,
  style: PropTypes.object,
};

/*----------------------------------------------------------------------------*/

export default compose(
  connect(state => state.cart),
  withTheme,
  withDropdown
)(RemoveFromCartButton);
