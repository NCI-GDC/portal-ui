/* @flow */

import React from 'react';

import { fetchApi } from '@ncigdc/utils/ajax';
import { handleActions } from 'redux-actions';

import DismissibleBanner from '@ncigdc/components/DismissibleBanner';

const NOTIFICATION_SUCCESS = 'NOTIFICATION_SUCCESS';
const NOTIFICATION_DISMISS = 'NOTIFICATION_DISMISS';

export function fetchNotifications() {
  return async (dispatch) => {
    let response = await fetchApi(
      'notifications',
      { headers: { 'Content-Type': 'application/json' } }
    );

    let { data } = await response;

    data.push({
        components:['PORTAL'],
        level:'INFO',
        id: 0,
        dismissible: true,
        message: <DismissibleBanner />,
    });
    
    dispatch({
      type: NOTIFICATION_SUCCESS,
      payload: data
    });
  };
}

export function dismissNotification(notificationID) {
  return {
    type: NOTIFICATION_DISMISS,
    payload: { id: notificationID }
  };
}

let initialState = [];
export default handleActions({
  [NOTIFICATION_SUCCESS]: (state, action) => (
    action.payload
      .filter(n => n.components.includes('PORTAL') || n.components.includes('API'))
      .map(n => ({ ...n, dismissed: false }))
  ),
  [NOTIFICATION_DISMISS]: (state, action) => state.map(n => (
    { 
      ...n,
      dismissed: n.id === action.payload.id ? true : n.dismissed,
    }
  ))
}, initialState);
