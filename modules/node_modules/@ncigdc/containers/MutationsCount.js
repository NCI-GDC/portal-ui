// @flow
import React from 'react';
import Relay from 'react-relay';
import { lifecycle, compose } from 'recompose';
import { isEqual } from 'lodash';
import GreyBox from '@ncigdc/uikit/GreyBox';

const MutationsCountComponent = compose(
  lifecycle({
    componentDidMount(): void {
      this.props.relay.setVariables({
        fetchData: true,
        ssmsFilters: this.props.filters,
      });
    },
    componentWillReceiveProps(nextProps: Object): void {
      if (!isEqual(this.props.filters, nextProps.filters)) {
        this.props.relay.setVariables({
          fetchData: true,
          ssmsFilters: nextProps.filters,
        });
      }
    },
  })
)(({
  ssms,
} = {}) => (ssms.hits ?
  <span>{ssms.hits.total.toLocaleString()}</span> : <GreyBox />)
);

export const MutationsCountQuery = {
  initialVariables: {
    ssmsFilters: null,
    fetchData: false,
  },
  fragments: {
    ssms: () => Relay.QL`
      fragment on Ssms {
        blah: hits(first: 0) { total }
        hits(filters: $ssmsFilters) @include(if: $fetchData) {
          total
        }
      }
    `,
  },
};

const MutationsCount = Relay.createContainer(
  MutationsCountComponent,
  MutationsCountQuery
);

export default MutationsCount;
