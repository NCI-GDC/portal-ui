/* global API */
// @flow
import React from 'react';
import { compose, withState, withProps, withPropsOnChange } from 'recompose';
import { Row, Column } from '@ncigdc/uikit/Flex';
import { getDefaultCurve } from '@ncigdc/utils/survivalplot';
import withFilters from '@ncigdc/utils/withFilters';
import { getFilterValue } from '@ncigdc/utils/filters';
import SurvivalPlotWrapper from '@ncigdc/components/SurvivalPlotWrapper';
import FrequentlyMutatedGenesChart from '@ncigdc/containers/FrequentlyMutatedGenesChart';
import FrequentlyMutatedGenesTable from '@ncigdc/containers/FrequentlyMutatedGenesTable';

const styles = {
  heading: {
    flexGrow: 1,
    fontSize: '2rem',
    marginBottom: 7,
    marginTop: 7,
  },
  card: {
    backgroundColor: 'white',
  },
};

const initialState = {
  loading: true,
};

export default
compose(
  withFilters(),
  withState('defaultSurvivalData', 'setDefaultSurvivalData', {}),
  withState('selectedSurvivalData', 'setSelectedSurvivalData', {}),
  withState('state', 'setState', initialState),
  withProps({ survivalPlotSampleSize: 500 }),
  withProps(({
    selectedSurvivalData,
    defaultSurvivalData,
    setDefaultSurvivalData,
    survivalPlotSampleSize,
    filters,
    setState,
  }) => ({
    survivalData: {
      legend: selectedSurvivalData.legend || defaultSurvivalData.legend,
      rawData: selectedSurvivalData.rawData || defaultSurvivalData.rawData,
    },
    updateData: async () => {
      const survivalData = await getDefaultCurve({
        currentFilters: filters,
        slug: 'Cohort',
        size: survivalPlotSampleSize,
      });

      setDefaultSurvivalData(survivalData);

      setState(s => ({
        ...s,
        loading: false,
      }));
    },
  })),
  withPropsOnChange(['filters'], ({ updateData }) => {
    updateData();
  })
)(({
  state: {
    loading,
  },
  survivalData,
  selectedSurvivalData,
  setSelectedSurvivalData,
  survivalPlotSampleSize,
  viewer,
  filters,
}) => {
  const projectIds = (getFilterValue({
    currentFilters: (filters || { content: [] }).content,
    dotField: 'cases.project.project_id',
  }) || { content: { value: [] } }).content.value;

  return (
    <Column style={styles.card}>
      <h1 style={{ ...styles.heading, padding: '1rem' }} id="mutated-genes">
        <i className="fa fa-bar-chart-o" style={{ paddingRight: '10px' }} />
        Genes
      </h1>
      <Column>
        <Row>
          <Column flex="none" style={{ width: '50%' }}>
            <FrequentlyMutatedGenesChart
              cohort={viewer.frequentlyMutatedGenesChartFragment}
              defaultFilters={filters}
            />
          </Column>
          <Column flex="none" style={{ width: '50%' }}>
            <SurvivalPlotWrapper
              {...survivalData}
              onReset={() => setSelectedSurvivalData({})}
              height={240}
              survivalPlotloading={loading}
            />
          </Column>
        </Row>
        <FrequentlyMutatedGenesTable
          defaultFilters={filters}
          projectIds={projectIds}
          survivalData={survivalData}
          setSelectedSurvivalData={setSelectedSurvivalData}
          selectedSurvivalData={selectedSurvivalData}
          cohort={viewer.frequentlyMutatedGenesTableFragment}
          projectBreakdown={viewer.projectBreakdownFragment}
          survivalPlotSampleSize={survivalPlotSampleSize}
          context="Cohort"
        />
      </Column>
    </Column>
  );
});
