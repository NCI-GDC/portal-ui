/* @flow */

import React from 'react';
import Relay from 'react-relay';

import TermAggregation from '@ncigdc/components/Aggregations/TermAggregation';
import SuggestionFacet from '@ncigdc/components/Aggregations/SuggestionFacet';
import DateFacet from '@ncigdc/components/Aggregations/DateFacet';
import { Row } from '@ncigdc/uikit/Flex';

import type { TBucket } from '@ncigdc/components/Aggregations/types';

import { withTheme } from '@ncigdc/theme';
import AnnotationIcon from '@ncigdc/theme/icons/AnnotationIcon';

export type TProps = {
  aggregations: {
    category: { buckets: [TBucket] },
    classification: { buckets: [TBucket] },
    entity_type: { buckets: [TBucket] },
    project__primary_site: { buckets: [TBucket] },
    project__program__name: { buckets: [TBucket] },
    project__project_id: { buckets: [TBucket] },
    status: { buckets: [TBucket] },
  },
  setAutocomplete: () => {},
  suggestions: Array<Object>,
  theme: Object,
};

export const AnnotationAggregationsComponent = (props: TProps) => (
  <div>
    <SuggestionFacet
      title="Annotation ID"
      placeholder="Search for Annotation ID"
      hits={props.suggestions}
      setAutocomplete={props.setAutocomplete}
      doctype='annotations'
      fieldNoDoctype='annotation_id'
      dropdownItem={(x) => (
        <Row>
          <AnnotationIcon style={{ paddingRight: '1rem' }} />
          {x.annotation_id}
        </Row>)}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.project__primary_site'}
      title="Primary Site"
      buckets={props.aggregations.project__primary_site.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.project__project_id'}
      title="Project"
      buckets={props.aggregations.project__project_id.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.entity_type'}
      title="Entity Type"
      buckets={props.aggregations.entity_type.buckets}
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.category'}
      title="Annotation Category"
      buckets={props.aggregations.category.buckets}
    />
    <DateFacet
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.created_datetime'}
      title="Annotation Created"
    />
    <TermAggregation
      style={{ borderTop: `1px solid ${props.theme.greyScale5}` }}
      field={'annotations.classification'}
      title="Annotation Classification"
      buckets={props.aggregations.classification.buckets}
    />
  </div>
);

export const AnnotationAggregationsQuery = {
  fragments: {
    aggregations: () => Relay.QL`
      fragment on AnnotationAggregations {
        category {
          buckets {
            doc_count
            key
          }
        }
        classification {
          buckets {
            doc_count
            key
          }
        }
        entity_type {
          buckets {
            doc_count
            key
          }
        }
        project__primary_site {
          buckets {
            doc_count
            key
          }
        }
        project__program__name {
          buckets {
            doc_count
            key
          }
        }
        project__project_id {
          buckets {
            doc_count
            key
          }
        }
        status {
          buckets {
            doc_count
            key
          }
        }
      }
    `,
  },
};


const AnnotationAggregations = Relay.createContainer(
  withTheme(AnnotationAggregationsComponent),
  AnnotationAggregationsQuery
);

export default AnnotationAggregations;
