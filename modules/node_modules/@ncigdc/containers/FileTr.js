/* @flow */

import React from 'react';

import { connect } from 'react-redux';
import { compose } from 'recompose';

import { toggleFilesInCart } from '@ncigdc/dux/cart';

import FileLink from '@ncigdc/components/Links/FileLink';
import FileSize from '@ncigdc/components/FileSize';
import AddToCartButtonSingle from '@ncigdc/components/AddToCartButtonSingle';

import { Tr, Td } from '@ncigdc/uikit/Table';
import { Tooltip } from '@ncigdc/uikit/Tooltip';
import Button from '@ncigdc/uikit/Button';

import { withTheme } from '@ncigdc/theme';
import styled from '@ncigdc/theme/styled';

export type TProps = {
  index: number,
  node: {
    access: string,
    cases: {
      hits: {
        total: number,
        edges: Array<{
          node: {
            project: {
              project_id: string,
            },
          },
        }>,
      },
    },
    data_category: string,
    data_format: string,
    file_id: string,
    file_name: string,
    file_size: number,
  },
  theme: Object,
  canAddToCart: Boolean,
};

const RemoveButton = styled(Button, ({
  backgroundColor: '#FFF',
  borderColor: '#CCC',
  color: '#333',
  margin: '0 auto',
  padding: '0px 5px',
  ':hover': {
    background: 'linear-gradient(to bottom, #ffffff 50%, #e6e6e6 100%) repeat scroll 0 0 #E6E6E6',
    borderColor: '#ADADAD',
  },
}));

export const FileTrComponent = ({ node, index, theme, canAddToCart = true, dispatch }: TProps) => (
  <Tr
    style={{
      backgroundColor: index % 2 === 0 ? theme.tableStripe : '#fff',
    }}
  >
    <Td>
      { canAddToCart &&
        <AddToCartButtonSingle file={node} />
      }
      { !canAddToCart &&
        <RemoveButton
          onClick={() => dispatch(toggleFilesInCart(node))}
          aria-label='Remove'
        >
          <Tooltip
            Component={'Remove'}
          >
            <i className='fa fa-trash-o' />
          </Tooltip>
        </RemoveButton>
      }
    </Td>
    <Td>
      {node.access === 'open' &&
        <i className='fa fa-unlock-alt' />
      }
      {node.access === 'controlled' &&
        <i className='fa fa-lock' />
      }
      <span
        style={{
          marginLeft: '0.3rem',
        }}
      >
        {node.access}
      </span>
    </Td>
    <Td>
      <FileLink id={node.file_id}>
        {node.file_name}
      </FileLink>
    </Td>
    <Td>{node.cases.hits.total}</Td>
    <Td>{new Set(node.cases.hits.edges.map(e => e.node.project.project_id))}</Td>
    <Td>{node.data_category}</Td>
    <Td>{node.data_format}</Td>
    <Td><FileSize bytes={node.file_size} /></Td>
  </Tr>
);

export default compose(connect(), withTheme)(FileTrComponent);
