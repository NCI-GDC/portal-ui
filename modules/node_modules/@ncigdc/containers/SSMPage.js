/* @flow */

import React from 'react';
import Relay from 'react-relay';

import SideNavLayout from '@ncigdc/components/Layouts/SideNavLayout';
import SSM from '@ncigdc/components/SSM';

export type TProps = {
  node: {
    genomic_dna_change: string,
  },
  viewer: {
    cohort: {
      cases: {
        aggregations: {
          project__project_id: {
            buckets: Array<Object>,
          },
        },
      },
    },
  },
};

export const SSMPageComponent = (props: TProps) => (
  <SideNavLayout
    links={[
      { icon: 'table', id: 'summary', title: 'Summary' },
      { icon: 'table', id: 'consequences', title: 'Consequences' },
      { icon: 'table', id: 'cancer-distribution', title: 'Cancer Distribution' },
      { icon: 'table', id: 'protein', title: 'Protein' },
    ]}
    title={props.node.genomic_dna_change}
    entityType={<i className="fa fa-file-o" />}
  >
    <SSM
      node={props.node}
      allCasesAgg={props.viewer.cohort.cases.aggregations.project__project_id.buckets}
    />
  </SideNavLayout>
);

export const SSMPageQuery = {
  fragments: {
    viewer: () => Relay.QL`
      fragment on Root {
        cohort {
          cases {
            aggregations {
              project__project_id {
                buckets {
                  doc_count
                  key
                }
              }
            }
          }
        }
      }
    `,
    node: () => Relay.QL`
      fragment on Ssm {
        ssm_id
        chromosome
        start_position
        reference_allele
        genomic_dna_change
        tumor_allele
        variant_type
        ncbi_build
        consequence {
          transcript {
            aa_change
            consequence_type
            transcript_id
            is_canonical
            transcript_id
            gene_symbol
            annotation {
              impact
              hgvsc
            }
            gene {
              external_db_ids {
                entrez_gene
                uniprotkb_swissprot
                hgnc
                omim_gene
              }
              gene_strand
              gene_id
            }
          }
        }
        occurrence {
          case {
            case_id
            disease_type
            primary_site
            project {
              project_id
            }
          }
        }
      }
    `,
  },
};

const SSMPage = Relay.createContainer(
  SSMPageComponent,
  SSMPageQuery
);

export default SSMPage;
