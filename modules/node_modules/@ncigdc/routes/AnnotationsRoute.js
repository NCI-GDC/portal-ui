/* @flow */
/* eslint fp/no-class:0 */

import React from 'react';
import Relay from 'react-relay';
import { connect } from 'react-redux';
import { parse } from 'query-string';

import { handleStateChange } from '@ncigdc/dux/relayProgress';
import AnnotationsPage from '@ncigdc/containers/AnnotationsPage';
import { parseIntParam, parseFilterParam, parseJSURLParam } from '@ncigdc/utils/uri';

import { viewerQuery } from './queries';

class AnnotationsRoute extends Relay.Route {
  static routeName = 'AnnotationsRoute';

  static queries = viewerQuery;

  static prepareParams = ({ location: { search } }) => {
    const q = parse(search);

    return ({
      offset: parseIntParam(q.offset, 0),
      size: parseIntParam(q.size, 20),
      filters: parseFilterParam(q.filters, null),
      annotations_sort: parseJSURLParam(q.annotations_sort, null),
    });
  }
}

export default connect()((props: mixed) => (
  <Relay.Renderer
    Container={AnnotationsPage}
    queryConfig={new AnnotationsRoute(props)}
    environment={Relay.Store}
    onReadyStateChange={handleStateChange(props)}
  />
));
